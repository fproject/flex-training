<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 
			   xmlns:s="library://ns.adobe.com/flex/spark" 
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   minWidth="955" minHeight="600"
			   xmlns:local="*" xmlns:views="views.*"
			   creationComplete="app_creationCompleteHandler(event)">
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.events.FlexEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import events.EmployeeEvent;
			
			import models.Employee;
			
			import renderers.FemaleEmployeeItemRenderer;
			import renderers.MaleEmployeeItemRenderer;
			
			[Bindable]
			public var employeeCollection:ArrayCollection;
			
			protected function employeeView_employeeViewSubmittedHandler(event:EmployeeEvent):void
			{
				if(event.action == EmployeeEvent.ACTION_SAVE)
					employeeService.saveEmployee(event.employee);
				//outputTextArea.appendText("\nSubmitted employee: " + event.employee.name);
			}
			
			protected function employeeService_resultHandler(event:ResultEvent):void
			{
				//outputTextArea.appendText("\nThe employee saving RPC returned: " + event.result);
			}
			
			protected function employeeService_faultHandler(event:FaultEvent=null):void
			{
				//outputTextArea.appendText("\nThe employee saving RPC failed: " + event.message);
				
				var vector:Vector.<Employee> = new Vector.<Employee>();
				vector.push(0);
				var a:Array = [];
				var al:ArrayList = new ArrayList();
				var ac:ArrayCollection = new ArrayCollection;
				
			}
			
			
			
			protected function app_creationCompleteHandler(event:FlexEvent):void
			{
				employeeCollection = new ArrayCollection;
				employeeCollection.addItem(null);
				employeeCollection.addItem(new Employee({id:1, name:"Peter Pan", gender:0, age:100}));
				employeeCollection.addItem(new Employee({id:2, name:"Robin Hood", gender:1, age:500}));
				employeeCollection.addItem(null);
				employeeCollection.addItem(new Employee({id:2, name:"Archilies", gender:1, age:1500}));
			}
			
			protected function employeeItemRendererFunction(e:Employee):IFactory
			{ 
				if(e.gender == 0)
					return new ClassFactory(FemaleEmployeeItemRenderer);
				else
					return new ClassFactory(MaleEmployeeItemRenderer);
			}
			
			protected function getEmployeeGenderLabel(item:Employee, column:AdvancedDataGridColumn):String
			{
				trace("Item:", item.id);
				return item.gender == 0 ? "Female" : "Male";
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:RemoteObject endpoint="http://training.f-project.net/?r=amfGateway" source="EmployeeService"
						id="employeeService" destination="xxx"
						result="employeeService_resultHandler(event)"
						fault="employeeService_faultHandler(event)"/>
	</fx:Declarations>
	
	<mx:AdvancedDataGrid id="employeeGrid" dataProvider="{employeeCollection}" width="100%" height="100%"
						 editable="true">
		<mx:columns>
			<mx:AdvancedDataGridColumn headerText="ID" dataField="id"/>
			<mx:AdvancedDataGridColumn headerText="Name" dataField="name"/>
			<mx:AdvancedDataGridColumn headerText="Age" dataField="age"/>
			<mx:AdvancedDataGridColumn headerText="Gender" dataField="gender" 
									   editorDataField="selectedItem" labelFunction="{getEmployeeGenderLabel}">
				<mx:itemEditor>
					<fx:Component>
						<mx:ComboBox dataProvider="{employeeGenders}" labelFunction="{getGenderLabel}">
							<fx:Script>
								<![CDATA[
									import mx.collections.ArrayList;
									
									[Bindable]
									protected var employeeGenders:ArrayList = new ArrayList([0, 1]);
									protected function getGenderLabel(item:int):String
									{
										return item == 0 ? "Female" : "Male";
									}
								]]>
							</fx:Script>
						</mx:ComboBox>
					</fx:Component>
				</mx:itemEditor>
			</mx:AdvancedDataGridColumn>
		</mx:columns>
	</mx:AdvancedDataGrid>
</s:Application>
